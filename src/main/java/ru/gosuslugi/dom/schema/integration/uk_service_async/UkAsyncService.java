
package ru.gosuslugi.dom.schema.integration.uk_service_async;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import jakarta.xml.ws.Service;
import jakarta.xml.ws.WebEndpoint;
import jakarta.xml.ws.WebServiceClient;
import jakarta.xml.ws.WebServiceException;
import jakarta.xml.ws.WebServiceFeature;


/**
 * Асинхронный сервис Управление контентом
 * 
 * This class was generated by the XML-WS Tools.
 * XML-WS Tools 4.0.2
 * Generated source version: 3.0
 * 
 */
@WebServiceClient(name = "UkAsyncService", targetNamespace = "http://dom.gosuslugi.ru/schema/integration/uk-service-async/", wsdlLocation = "http://localhost/")
public class UkAsyncService
    extends Service
{

    private static final URL UKASYNCSERVICE_WSDL_LOCATION;
    private static final WebServiceException UKASYNCSERVICE_EXCEPTION;
    private static final QName UKASYNCSERVICE_QNAME = new QName("http://dom.gosuslugi.ru/schema/integration/uk-service-async/", "UkAsyncService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://localhost/");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        UKASYNCSERVICE_WSDL_LOCATION = url;
        UKASYNCSERVICE_EXCEPTION = e;
    }

    public UkAsyncService() {
        super(__getWsdlLocation(), UKASYNCSERVICE_QNAME);
    }

    public UkAsyncService(WebServiceFeature... features) {
        super(__getWsdlLocation(), UKASYNCSERVICE_QNAME, features);
    }

    public UkAsyncService(URL wsdlLocation) {
        super(wsdlLocation, UKASYNCSERVICE_QNAME);
    }

    public UkAsyncService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, UKASYNCSERVICE_QNAME, features);
    }

    public UkAsyncService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public UkAsyncService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns UkAsyncPort
     */
    @WebEndpoint(name = "UkAsyncPort")
    public UkAsyncPort getUkAsyncPort() {
        return super.getPort(new QName("http://dom.gosuslugi.ru/schema/integration/uk-service-async/", "UkAsyncPort"), UkAsyncPort.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link jakarta.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns UkAsyncPort
     */
    @WebEndpoint(name = "UkAsyncPort")
    public UkAsyncPort getUkAsyncPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://dom.gosuslugi.ru/schema/integration/uk-service-async/", "UkAsyncPort"), UkAsyncPort.class, features);
    }

    private static URL __getWsdlLocation() {
        if (UKASYNCSERVICE_EXCEPTION!= null) {
            throw UKASYNCSERVICE_EXCEPTION;
        }
        return UKASYNCSERVICE_WSDL_LOCATION;
    }

}
